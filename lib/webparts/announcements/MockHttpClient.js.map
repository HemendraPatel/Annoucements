{"version":3,"sources":["webparts/announcements/MockHttpClient.ts"],"names":[],"mappings":";AAEA;IAAA;IAWA,CAAC;IALiB,kBAAG,GAAjB;QACA,MAAM,CAAC,IAAI,OAAO,CAAY,UAAC,OAAO;YAC9B,OAAO,CAAC,cAAc,CAAC,MAAM,CAAC,CAAC;QACnC,CAAC,CAAC,CAAC;IACP,CAAC;IACL,qBAAC;AAAD,CAXA,AAWC;AATkB,qBAAM,GAAc,CAAC,EAAE,KAAK,EAAE,qBAAqB,EAAE,EAAE,EAAE,GAAG,EAAE,OAAO,EAAE,sBAAsB,EAAE;IAC1E,EAAE,KAAK,EAAE,qBAAqB,EAAE,EAAE,EAAE,GAAG,EAAE,OAAO,EAAE,sBAAsB,EAAC;IACzE,EAAE,KAAK,EAAE,qBAAqB,EAAE,EAAE,EAAE,GAAG,EAAE,OAAO,EAAE,sBAAsB,EAAC,CAAC,CAAC","file":"webparts/announcements/MockHttpClient.js","sourcesContent":["import { ISPList } from './AnnouncementsWebPart';\r\n\r\nexport default class MockHttpClient  {\r\n\r\n    private static _items: ISPList[] = [{ Title: 'Test Announcement 1', Id: '1', Expires: '2017-04-22T04:00:00Z' },\r\n                                        { Title: 'Test Announcement 2', Id: '2', Expires: '2017-03-24T04:00:00Z'},\r\n                                        { Title: 'Test Announcement 3', Id: '3', Expires: '2017-01-12T04:00:00Z'}];\r\n\r\n    public static get(): Promise<ISPList[]> {\r\n    return new Promise<ISPList[]>((resolve) => {\r\n            resolve(MockHttpClient._items);\r\n        });\r\n    }\r\n}\r\n"],"sourceRoot":"..\\..\\..\\src"}